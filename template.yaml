AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Stackery Serverless API Example Stack
Resources:
  TriggerDeployFrontEndOnDeploy:
    Type: Custom::TriggerDeployFrontEndOnDeploy
    Properties:
      ServiceToken: !GetAtt deployFrontEnd.Arn
      Trigger: !Ref StackeryDeploymentTimestamp
  deployFrontEnd:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-deployFrontEnd
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: deployFrontEnd
      CodeUri: src/deployFrontEnd
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 300
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - S3CrudPolicy:
            BucketName: !Ref Bucket
      Environment:
        Variables:
          XDG_CONFIG_HOME: /tmp/.config
          BUCKET_NAME: !Ref Bucket
          BUCKET_ARN: !GetAtt Bucket.Arn
    Metadata:
      StackeryName: deployFrontEnd
  deployFrontEndDeployTrigger:
    Type: Custom::FunctionDeployTrigger
    Properties:
      ServiceToken: !GetAtt deployFrontEnd.Arn
  api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName}
        - ResourceName: api
      StageName: !Ref StackeryEnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /:
            get:
              responses: {}
      EndpointConfiguration: REGIONAL
  getWelcomePage:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-getWelcomePage
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: getWelcomePage
      CodeUri: src/getWelcomePage
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - S3CrudPolicy:
            BucketName: !Ref Bucket2
      Events:
        apiGET:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref api
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
          TABLE_ARN: !GetAtt Table.Arn
          BUCKET_NAME: !Ref Bucket2
          BUCKET_ARN: !GetAtt Bucket2.Arn
    Metadata:
      StackeryName: getWelcomePage
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucket-${AWS::AccountId}
  Bucket2:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucket2-${AWS::AccountId}
Parameters:
  StackeryStackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  StackeryEnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackeryEnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)
  StackeryDeploymentTimestamp:
    Type: Number
    Description: Deployment preparation timestamp in milliseconds Since Epoch (injected by Stackery at deployment time)